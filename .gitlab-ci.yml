variables:
  NUGET_PACKAGES_DIR: '~/.nuget'
  SOURCE_CODE_PATH: './MovieAppAPI'
  DATABASE_FILL_PATH: './DatabaseFill'
  DEBUG_BUILD_DLL: './MovieAppAPI/bin/Debug/net6.0/MovieAppAPI.dll'
  RELEASE_BUILD_DLL: './MovieAppAPI/bin/Release/net6.0/MovieAppAPI.dll'

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-app-job:       # This job runs in the build stage, which runs first.
  stage: build
  image: mcr.microsoft.com/dotnet/sdk:6.0-alpine-amd64
  tags:
    - build
  script:
    - echo "Building the project"
    - dotnet build --configuration Release $SOURCE_CODE_PATH
  artifacts:
    name: App.dll
    paths:
      - $RELEASE_BUILD_DLL
    expire_in: 30 mins

movie-proj-unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  image: mcr.microsoft.com/dotnet/sdk:6.0-alpine-amd64
  tags: 
    - test
  script:
    - dotnet test
    - echo "Running unit tests... This will take about 2 seconds."
    - sleep 2
    - echo "Code coverage is 90%"

lint-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  image: mcr.microsoft.com/dotnet/sdk:6.0-alpine-amd64
  tags: 
    - test
  script:
    - echo "Linting code... This will take about 1 seconds."
    - sleep 1
    - echo "No lint issues found."

deploy-job:      # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment: production
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
